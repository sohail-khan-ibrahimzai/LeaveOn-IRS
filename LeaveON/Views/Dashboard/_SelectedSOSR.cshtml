@model InventoryRepo.Models.Dashboard



@{
  /**/

  /**/


  string whtieSpace = ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString();
  //MYBUSINESS.Models.Employee currentUser = (MYBUSINESS.Models.Employee)HttpContext.Current.Session["CurrentUser"];
  //Dictionary<decimal, decimal> LstMaxSerialNo = new Dictionary<decimal, decimal>();
  //Dictionary<decimal, decimal> LstMaxSerialNo = @ViewBag.LstMaxSerialNo;

  <div id="NewData">
    @*@{ 
      var aa = Model.Drivers;

    }*@

   
      <!-- Small boxes (Stat box) -->
      <div class="row">
        <div class="col-lg-3 col-xs-6">
          <!-- small box -->
          <div class="small-box badge-info">
            <div class="inner">
              <h3> @Html.DisplayNameFor(model => model.Drivers)</h3>
              <p><h3>@Model.Drivers</h3></p>
              <!--<p>-->@*Drivers*@<!--</p>-->
            </div>
            <div class="icon">
              <i class="fa fa-taxi-bus"></i>
            </div>
            <a href="/Drivers/Index" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
          </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
          <!-- small box -->
          <div class="small-box bg-green">
            <div class="inner">
              <h3>@Html.DisplayNameFor(model => model.Passengers)<sup style="font-size: 20px"></sup></h3>
              <p><h3>@Model.Passengers</h3></p>
              <!--<p>-->@*Passengers*@<!--</p>-->
            </div>
            <div class="icon">
              <i class="fa fa-person-walking"></i>
            </div>
            <a href="/Passengers/Index" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
          </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
          <!-- small box -->
          <div class="small-box bg-yellow">
            <div class="inner">
              <h3>@Html.DisplayNameFor(model => model.Trips)</h3>
              <p><h3>@Model.Trips</h3></p>
              @*<p>Trips</p>*@
            </div>
            <div class="icon">
              <i class="fa fa-route"></i>
            </div>
            <a href="/Trips/Index" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
          </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
          <!-- small box -->
          <div class="small-box bg-red">
            <div class="inner">
              <h3>@Html.DisplayNameFor(model => model.AspNetUsers)</h3>
              <p><h3>@Model.AspNetUsers</h3></p>
              <!--<p>-->@*Users*@<!--</p>-->
            </div>
            <div class="icon">
              <i class="fa fa-users"></i>
            </div>
            <a href="/AspNetUsers/Index" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
          </div>
        </div>
        <!-- ./col -->
      </div>
      <!-- /.row -->
      <!-- Main row -->
      <!-- /.row (main row) -->

  
  </div>

}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

<script type="text/javascript">
  $(document).ready(function () {
    //$("#success-alert").hide();

    //$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
    //    $("#success-alert").slideUp(500);
    //});
    //$('#toggle').bootstrapToggle({
    //    on: 'Enabled',
    //    off: 'Disabled'

    //});

    //$(document).on('change', ":checkbox", function () {

    //    var checkbox = $(this).prop('checked');
    //    alert(checkbox);
    //});

    //$('[id^="SR"]').click(function () {
    //    var isChecked = $(this).is(':checked');
    //    alert(isChecked);
    //});

    $(document).ajaxStart(function () {
      /*$("#wait").css("display", "block");*/
    });

    $(document).ajaxComplete(function () {
      /*$("#wait").css("display", "none");*/
    });

    $('[id^="SR"]').change(function () {
      //var end = this.value;
      //var firstDropVal = $('#saleType').val();
      /*update_itemTotal();*/
      /*alert($(this).attr('id'));*/
      var SOSerial = $(this).attr('id');
      var SaleStatus = false;
      var checkbox = $(this).prop('checked');
      var sent = false;
      //alert(checkbox);
      //var checkBoxes = $("input[type='checkbox']");
      //alert(checkBoxes);
      /*if ($(this).attr('checked') == true) {*/
      //var lastValue = $(this).prop('checked');

      if ($(this).prop('checked') == true) {
        SaleStatus = true;
        //$(this).prop('checked', true);
        //alert($(this).prop('checked'));

      }
      else {
        SaleStatus = false;
        //$(this).prop('checked', false);
        //alert($(this).prop('checked'));

      }

      if (sent == true) {

      }
      sent = true;



    });




    //$('#SOSRIndex').DataTable({
    //    fixedHeader: {
    //        footer: true
    //    }
    //});
    $('#example').DataTable({
      "paging": false,
      "lengthChange": false,
      "pageLength": 100,
      "searching": false,
      "ordering": true,
      "info": false,
      "autoWidth": true,
      "responsive": true,
      "order": [[0, "desc"]]//,
      //dom: 'Bfrtip',
      //buttons: [
      //  'copy', 'csv', 'excel', 'pdf', 'print'
      //]



      //"footerCallback": function (row, data, start, end, display) {
      //    var api = this.api(), data;

      //    // Remove the formatting to get integer data for summation
      //    var intVal = function (i) {
      //        return typeof i === 'string' ?
      //            i.replace(/[\$,]/g, '') * 1 :
      //            typeof i === 'number' ?
      //                i : 0;
      //    };

      //    // Order No
      //    pageTotal = api
      //        .column(1, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            a += 1;
      //            //alert(a);
      //            return intVal(a);
      //        }, 0);
      //    $(api.column(1).footer()).html(pageTotal);


      //    // Order Qty
      //    pageTotal = api
      //        .column(4, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            return intVal(a) + intVal(b);
      //        }, 0);
      //    $(api.column(4).footer()).html(pageTotal);



      //    // Order Amount
      //    pageTotal = api
      //        .column(5, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            return intVal(a) + intVal(b);
      //        }, 0);
      //    $(api.column(5).footer()).html(pageTotal);

      //    // Return Qty
      //    pageTotal = api
      //        .column(6, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            return intVal(a) + intVal(b);
      //        }, 0);
      //    $(api.column(6).footer()).html(pageTotal);

      //    // Return amnt
      //    pageTotal = api
      //        .column(7, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            return intVal(a) + intVal(b);
      //        }, 0);
      //    $(api.column(7).footer()).html(pageTotal);

      //    // Discount
      //    pageTotal = api
      //        .column(8, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            return intVal(a) + intVal(b);
      //        }, 0);
      //    $(api.column(8).footer()).html(pageTotal);


      //    // Bill paid
      //    pageTotal = api
      //        .column(10, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            return intVal(a) + intVal(b);
      //        }, 0);
      //    $(api.column(10).footer()).html(pageTotal);

      //    // Balance
      //    //pageTotal = api
      //    //    .column(11, { page: 'current' })
      //    //    .data()
      //    //    .reduce(function (a, b) {
      //    //        return intVal(a) + intVal(b);
      //    //    }, 0);
      //    //$(api.column(11).footer()).html(pageTotal);

      //    // Profit
      //    pageTotal = api
      //        .column(12, { page: 'current' })
      //        .data()
      //        .reduce(function (a, b) {
      //            return intVal(a) + intVal(b);
      //        }, 0);
      //    $(api.column(12).footer()).html(pageTotal);

      //}

    });

  });


</script>
