@model InventoryRepo.Models.AspNetUser

@{
  ViewBag.Title = "Create";
  Layout = "~/Views/Shared/_Layout.cshtml";
}






<!-- left column -->
<div class="col-md-6">
  <!-- general form elements -->
  <div class="card card-primary">
    <div class="card-header">
      <h3 class="card-title">Add User</h3>
    </div>
    <!-- /.card-header -->
    <!-- form start -->

    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()


      <div class="card-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
          @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label" })
          <div class="col-md-10">
            @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
           </div>
          </div>*@

        <div class="form-group">

          @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Hometown, "Home Town", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.Hometown, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Hometown, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.EmailConfirmed, "Email Confirmed", htmlAttributes: new { @class = " " })

          <div class="checkbox">
            @Html.EditorFor(model => model.EmailConfirmed)
            @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
          </div>

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.PasswordHash, "Password Hash", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.SecurityStamp, "Security Stamp", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.PhoneNumber, "Phone Number", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.PhoneNumberConfirmed, "Phone Number Confirmed", htmlAttributes: new { @class = " " })

          <div class="checkbox">
            @Html.EditorFor(model => model.PhoneNumberConfirmed)
            @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
          </div>

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.TwoFactorEnabled, "Two Factor Enabled", htmlAttributes: new { @class = " " })

          <div class="checkbox">
            @Html.EditorFor(model => model.TwoFactorEnabled)
            @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
          </div>

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.LockoutEndDateUtc, "Lockout End-Date Utc", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.LockoutEnabled, "Lockout Enabled", htmlAttributes: new { @class = " " })

          <div class="checkbox">
            @Html.EditorFor(model => model.LockoutEnabled)
            @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
          </div>

        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.AccessFailedCount, "Access Failed Count ", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.DateCreated, "Date Created", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.DateModified, "Date Modified", htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.DateModified, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.DateModified, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = " " })

          @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
          @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = " " })

          @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })
          @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
        </div>



        <div class="form-group">
          <div class="class=" card-footer">
            <input type="submit" value="Save" class="btn btn-primary" style="width: 180px; margin-left:auto;margin-right:auto;display:block;margin-top:auto;margin-bottom:0%" />
          </div>
        </div>
        <br />
        <div>
          @Html.ActionLink("Back to List", "Index")
        </div>
      </div>


    }




    @*@section Scripts {
          @Scripts.Render("~/bundles/jqueryval")
      }*@

  </div>
</div>
